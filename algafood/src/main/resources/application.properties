spring.datasource.url=jdbc:mysql://127.0.0.1/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

## DDL eh um script de criacao das tabelas
#spring.jpa.generate-ddl=true
## atualiza o schema
#spring.jpa.hibernate.ddl-auto=update

## DDL gerado por schema generation
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

## flyway localiza os scripts de migration e de callback
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

## retornando de messagens de erros personalizadas
server.error.include-message=ALWAYS

## falha quando uma propriedade for desconhecida
spring.jackson.deserialization.fail-on-unknown-properties=true

## falha quando a propriedade ignorada for deserializada
spring.jackson.deserialization.fail-on-ignored-properties=true

## se nao tiver um codigo mapeado para aquela URL sera lancada uma exception
spring.mvc.throw-exception-if-no-handler-found=true

## desabilitando um resource handling do spring que serve arquivos estaticos
spring.web.resources.add-mappings=false

## alterando o nome da propriedade do json para snake case
#spring.jackson.property-naming-strategy=SNAKE_CASE

## tamanho maximo de um arquivo
#spring.servlet.multipart.max-file-size=20KB
#spring.servlet.multipart.max-request-size=20MB

##informando que o armazenamento sera na amazon s3 ou local
#algafood.storage.tipo=s3
algafood.storage.tipo=local

## informando o caminho para o diretorio de fotos
algafood.storage.local.diretorio-fotos=/test

## acessando a amazon s3
#algafood.storage.s3.id-chave-acesso=
#algafood.storage.s3.chave-acesso-secreta=
algafood.storage.s3.bucket=algafood-test
algafood.storage.s3.regiao=us-east-1
algafood.storage.s3.diretorio-fotos=catalogo

## configurando o servidor SMTP para envio de email
spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
#spring.mail.password=

algafood.email.remetente=AlgaFood <naoresponder@algafood.com.br>
algafood.email.impl=fake
spring.freemarker.settings.locale=pt_BR

## SANDBOX
algafood.email.sandbox.destinatario=teste@algafood.com.br

## SpringFox/OpenApi
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

## comprimindo os kbs da resposta.
server.compression.enabled=true

## Loggly logger
logging.loggly.token=seu_customer_token_aqui

## Spring Security
spring.security.user.name=algafood
spring.security.user.password=123456

spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://127.0.0.1:8081/oauth/check_token
spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
spring.security.oauth2.resourceserver.opaquetoken.client-secret=check123